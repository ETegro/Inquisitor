<% components_count = MyKit::Keywords::PROPS.first.size %>
<style type='text/css'>
	th, td { border: 1px solid #ddd } th { background: #eee } table { border-collapse: collapse }
</style>

<div style='padding: 5px'>

<div style='float: left'><%= link_to('< Prev', :action => 'items', :id => @prev_id) if @prev_id %></div>
<div style='float: right'><%= link_to('Next >', :action => 'items', :id => @next_id) if @next_id %></div>
<div style='text-align: center'><%= link_to('Components', :action => 'components', :id => @order.id) %></div>

<div style='clear: both; height: 1em'>&nbsp;</div>

<table style='width: 100%' >
<tr>
<th rowspan='2'>Item</th><th rowspan='2'>Vendors</th><th rowspan='2'>Sensible chunks</th><th colspan='<%= components_count %>'>Components</th><th colspan='2'>Properties</th>
</tr>
<tr>
<%= (0..components_count - 1).collect { |i| content_tag(:th, MyKit::Keywords::Components[i], :style => "width: 3em" ) } %>
<th>Name</th><th>Value</th>
</tr>
<% @items.each do |item| %>
<tr>
	<%= content_tag(:td, item.string) + content_tag(:td, item.vendors.join(', ')) + content_tag(:td, item.sense.join(', ')) %>
	<%= item.components.collect { |c| content_tag(:td, c.to_s, :style => "background: \##{'%02X' % (0xfe - 0xb * c) }f0f0") }.join %>
	<% props = item.properties.collect { |k, v| v.collect { |h| [MyKit::Keywords::Properties[k], "#{h[:value]} #{h[:unit]}"] } }.inject([]) { |a, b| a + b } %> 
	<% unless props.blank? %>
		<% pair = props.pop %>
		<%= pair.collect { |s| content_tag(:td, s) }.join %>
	<% else %>
		<%= content_tag(:td, '') * 2 %>
	<% end %>
</tr>
<% until props.blank? %>
<tr>
	<%= content_tag(:td, '') * (components_count + 3) %>
	<% pair = props.pop %>
	<%= pair.collect { |s| content_tag(:td, s) }.join %>
</tr>
<% end %>
<% end %>
</table>

<div style='color: #aaa ; font-size: 10px'><%=
	content_tag(:p, MyKit::Lexer.ts.join(", ")) + content_tag(:p, MyKit::Strings.ts.join(", "))
%></div>

</div>

