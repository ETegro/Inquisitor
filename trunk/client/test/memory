#!/bin/sh -ef
# NAME=Memory
# DESCRIPTION=Memory test
# DESTROYS_HDD=false
# IS_INTERACTIVE=false
# POWEROFF_DURING_TEST=false
# VERSION=0.1
# TAGS=ram,memory
# VAR=TEST_LOOPS:int:3:Number of testing loops
# VAR=LOGTIME:int:120:Time between progress updates, sec

. /usr/share/inquisitor/functions-test

# Temporary disabled because of broken oom_killer
#TOTAL_MEMORY=$(( `grep MemTotal /proc/meminfo | awk '{print $2}'` / 1024 ))
TOTAL_MEMORY=$(( (`grep MemTotal /proc/meminfo | \
	awk '{print $2}'`) / 1024 - 256 ))
TOTAL_SUBSTAGES=$(( 16 * $TEST_LOOPS ))
COMPLETED_SUBSTAGES=0

exit_handler()
{
	[ -d "/proc/$MEMTEST_PID" ] && kill $MEMTEST_PID
	[ -f  "$MEMORY_LOG" ] && rm $MEMORY_LOG
}

MEMORY_LOG=`mktemp`

turnoff_oom_killer()
{
	sysctl vm.overcommit_memory=2
	sysctl vm.overcommit_ratio=95
}

turnon_oom_killer()
{
	sysctl vm.overcommit_memory=0
	sysctl vm.overcommit_ratio=50
}

#turnoff_oom_killer

memtester $TOTAL_MEMORY $TEST_LOOPS > $MEMORY_LOG 2>&1 &
MEMTEST_PID=$!

while true ; do
	sleep $LOGTIME
	COMPLETED_SUBSTAGES=`grep "ok$" $MEMORY_LOG | wc -l`
	if [ -d /proc/$MEMTEST_PID ] ; then
		test_progress $COMPLETED_SUBSTAGES $TOTAL_SUBSTAGES
	else
		if [ "$COMPLETED_SUBSTAGES" -eq "$TOTAL_SUBSTAGES" ] ; then
			test_succeeded
			#turnon_oom_killer
			break
		else
			if grep -q "^FAILURE:" $MEMORY_LOG; then
				failure_message=`sed -n '/^FAILURE:/ s/FAILURE: //p' < $MEMORY_LOG`
				print_red_message "FAILURE: $failure_message"
				test_failed "$failure_message"
				#turnon_oom_killer
			else
				test_failed
				#turnon_oom_killer
			fi

			break
		fi
	fi
done
