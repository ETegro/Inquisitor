#!/bin/sh -ef
# NAME=FDD read/write
# DESCRIPTION=Floppy drive read/write test
# DESTROYS_HDD=false
# IS_INTERACTIVE=true
# POWEROFF_DURING_TEST=false
# VERSION=0.1
# TAGS=fdd
# VAR=FLOPPY_SIZE:int:1440:Size of testing floppy, KiB

. /usr/share/inquisitor/functions-test

TEST_IMAGE=`mktemp`

# Cleanup
exit_handler()
{
	local rc=$?
	trap - EXIT

	if [ -f "$TEST_IMAGE" ]; then
		rm -f $TEST_IMAGE
	fi
	if [ -f "$TEST_IMAGE"_fd ]; then
		rm -f "$TEST_IMAGE"_fd
	fi
	exit $rc
}
trap exit_handler HUP PIPE INT QUIT TERM EXIT

generate_test_image()
{
	if dd if=/dev/urandom of=$TEST_IMAGE bs=1024 count=$FLOPPY_SIZE >/dev/null 2>&1; then
		true
	else
		test_failed "Unable to create test image"
		exit 1
	fi
}

test_fdd()
{
	local fdd=$1

	echo -n "Writing..."
	dd if=$TEST_IMAGE of=$fdd >/dev/null 2>&1
	echo_success

	# Clear all caches
	sync;sync;sync
	floppycontrol -f -d $fdd >/dev/null 2>&1 || true
	echo 3 > /proc/sys/vm/drop_caches

	echo -n "Reading and comparing..."
	dd if=$fdd of="$TEST_IMAGE"_fd bs=1024 count=$FLOPPY_SIZE >/dev/null 2>&1
	diff "$TEST_IMAGE"_fd $TEST_IMAGE >/dev/null 2>&1 || return 1
	echo_success

	return 0
}

interactive()
{
	local fdd=$1
	local non_passed=1

	while ( [ "$non_passed" -eq 1 ] ); do
		print_green_message "Drive ${fdd}:"
		print_green_message "Either press y and insert floppy for testing, or n if you want to finish test: "
		read choice

		if [ "$choice" = "n" ]; then
			test_failed "User cancelled test for $fdd"
			break
		fi

		test_fdd $fdd

		if [ $? -eq 0 ]; then
			print_green_message "Drive test passed"
			TESTED_QUANTITY=$(( $TESTED_QUANTITY + 1 ))
			test_progress $TESTED_QUANTITY $FDD_QUANTITY
			non_passed=0
		else
			print_red_message "Drive test failed!"
		fi
	done
}

FDD_QUANTITY=`get_fdds_list | wc -l`
[ "$FDD_QUANTITY" -eq 0 ] && exit 1
generate_test_image
TESTED_QUANTITY=0

for fdd in `get_fdds_list`; do
	interactive $fdd
done

test_succeeded
