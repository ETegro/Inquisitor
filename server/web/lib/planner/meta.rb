# DO NOT EDIT: IT'S A GENERATED FILE! USE ./configure to REGENERATE!

$TESTS = {"gprs-modem"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>
    {"CHAT_TIMEOUT"=>
      {:type=>"int",
       :default=>"5",
       :comment=>"Timeout for waiting for answer"},
     "ANSWER_ATI"=>
      {:type=>"string", :default=>"OK", :comment=>"String to get after ATI"},
     "DEV"=>
      {:type=>"string",
       :default=>"/dev/ttyUSB0",
       :comment=>"Name of device to test"}},
   :name=>"USB GPRS modem",
   :description=>"Test GPRS modem, connected using USB",
   :version=>"0.1",
   :destroys_hdd=>false},
 "memory"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>
    {"TEST_LOOPS"=>
      {:type=>"int", :default=>"3", :comment=>"Number of testing loops"},
     "LOGTIME"=>
      {:type=>"int",
       :default=>"120",
       :comment=>"Time between progress updates, sec"}},
   :name=>"Memory test: memtester",
   :description=>
    "This memory test is performed without reboot, under control of live full-featured OS, using user-space memtester program. Test takes special precautions and tries to lock maximum possible amount of memory for memtester. memtester tests memory using standard read-write-check method using 16 patterns.",
   :version=>"0.1",
   :depends=>["Memory"],
   :destroys_hdd=>false},
 "hdd-array"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>
    {"JOBS"=>
      {:type=>"int",
       :default=>"16",
       :comment=>"Number of parallely running jobs during compile"},
     "STRESS_TREE"=>
      {:type=>"string",
       :default=>"linux-2.6.22.5-31-stress.tar.gz",
       :comment=>"Tarball file containing stress test tree"},
     "TESTTIME"=>
      {:type=>"int",
       :default=>"3600",
       :comment=>"Total time of HDD array testing, sec"},
     "LOGTIME"=>
      {:type=>"int",
       :default=>"120",
       :comment=>"Time between progress updates, sec"}},
   :name=>"HDD array stress",
   :description=>"HDD array stress test",
   :version=>"0.1",
   :depends=>["CPU", "HDD", "Memory", "Mainboard", "Disk Controller"],
   :destroys_hdd=>true},
 "mencoder"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>
    {"FILE_TO_ENCODE"=>
      {:type=>"string",
       :default=>"/usr/share/inquisitor/movie.avi",
       :comment=>"Path to file need to be encoded"},
     "ENCODE_OPTIONS"=>
      {:type=>"string",
       :default=>
        "-ovc lavc -lavcopts vcodec=mpeg4 -oac mp3lame -lameopts vbr=3",
       :comment=>"Encoding options"}},
   :name=>"Mencoder",
   :description=>"Mencoder encoding time benchmark",
   :version=>"0.1",
   :depends=>["CPU", "Memory", "Mainboard"],
   :destroys_hdd=>false},
 "stream"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>{},
   :name=>"Stream",
   :description=>"STREAM memory throughput benchmark",
   :version=>"0.1",
   :depends=>["Memory"],
   :destroys_hdd=>false},
 "dhrystone"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>
    {"DURATION"=>
      {:type=>"int", :default=>"30", :comment=>"Benchmark duration (sec)"}},
   :name=>"Dhrystone",
   :description=>"Dhrystone integer calculations benchmark",
   :version=>"0.1",
   :depends=>["CPU"],
   :destroys_hdd=>false},
 "usb-flash-drive"=>
  {:is_interactive=>true,
   :poweroff_during_test=>false,
   :var=>
    {"SIZE"=>
      {:type=>"int",
       :default=>"20",
       :comment=>"Size of test file to be written, Blocksizes"},
     "COUNT"=>
      {:type=>"int",
       :default=>"2",
       :comment=>"There should be this many devices"},
     "BLOCKSIZE"=>
      {:type=>"int",
       :default=>"1024",
       :comment=>"Blocksize used for reading and writing by dd, KiB"}},
   :name=>"USB Flash Drive",
   :description=>"USB Flash Drive working ability test with speed measurement",
   :version=>"0.1",
   :depends=>["USB"],
   :destroys_hdd=>true},
 "firmware"=>
  {:is_interactive=>false,
   :poweroff_during_test=>true,
   :var=>{},
   :name=>"Firmware reflashing",
   :description=>"Firmware reflashing",
   :version=>"0.1",
   :depends=>["Mainboard", "Disk Controller"],
   :destroys_hdd=>false},
 "odd_read"=>
  {:is_interactive=>true,
   :poweroff_during_test=>false,
   :var=>
    {"MESH_POINTS"=>
      {:type=>"int",
       :default=>"1024",
       :comment=>"Points for meshes for monitoring drive's speed"},
     "TEST_IMAGE_BLOCKS"=>
      {:type=>"int",
       :default=>"332800",
       :comment=>"This images size in blocks (2048 bytes each)"},
     "FORCE_NON_INTERACTIVE"=>
      {:type=>"boolean",
       :default=>"false",
       :comment=>"Force non-interactive mode for already prepared system"},
     "TEST_IMAGE_HASH"=>
      {:type=>"string",
       :default=>"6fa7786eef2e11d36e8bc1663679f161",
       :comment=>"Default image for comparison hash"}},
   :name=>"ODD read",
   :description=>"Optical Disc Drive read test",
   :version=>"0.1",
   :depends=>["OSD"],
   :destroys_hdd=>false},
 "gprs-modem-dialup"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>
    {"SPEED"=>{:type=>"int", :default=>"115200", :comment=>"Line speed"},
     "PPPD_USERNAME"=>
      {:type=>"string",
       :default=>"mts",
       :comment=>"Cell service provider's pppd username"},
     "URL"=>
      {:type=>"string",
       :default=>
        "img-fotki.yandex.ru/getx/10/photoface.359/sevastopol-foto_34661_L",
       :comment=>"URL to download (without http)"},
     "UPLOAD_TRIES"=>
      {:type=>"int",
       :default=>"3",
       :comment=>"Number of tries to upload the file"},
     "UPLOAD_URL"=>
      {:type=>"string",
       :default=>"",
       :comment=>"URL to upload (without http)"},
     "DOWNLOAD_TRIES"=>
      {:type=>"int",
       :default=>"3",
       :comment=>"Number of tries to download the file"},
     "PPPD_TRIES"=>
      {:type=>"int",
       :default=>"4",
       :comment=>"Number of tries to bring pppd up"},
     "UPLOAD_FILE"=>
      {:type=>"string",
       :default=>"/etc/ld.so.cache",
       :comment=>"File to upload"},
     "MD5"=>
      {:type=>"string",
       :default=>"ca530886183b06d0047e0655537327aa",
       :comment=>"MD5 of downloaded file"},
     "DOWNLOAD_MAX_TIME"=>
      {:type=>"int",
       :default=>"60",
       :comment=>"Timeout for the whole download, sec"},
     "APN"=>
      {:type=>"string",
       :default=>"internet.mts.ru",
       :comment=>"Cell service provider's Internet APN"},
     "UPLOAD_MAX_TIME"=>
      {:type=>"int",
       :default=>"120",
       :comment=>"Timeout for file upload, sec"},
     "DEV"=>
      {:type=>"string",
       :default=>"/dev/ttyUSB0",
       :comment=>"Name of device to test"}},
   :name=>"USB GPRS Modem Dialup",
   :description=>"Test GPRS modem, connected using USB",
   :version=>"0.2",
   :destroys_hdd=>false},
 "fdd"=>
  {:is_interactive=>true,
   :poweroff_during_test=>false,
   :var=>
    {"FLOPPY_SIZE"=>
      {:type=>"int",
       :default=>"1440",
       :comment=>"Size of testing floppy, KiB"}},
   :name=>"FDD read/write",
   :description=>"Floppy drive read/write test",
   :version=>"0.1",
   :depends=>["Floppy"],
   :destroys_hdd=>false},
 "net"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>
    {"EXCLUDE_MAC"=>
      {:type=>"string",
       :default=>"",
       :comment=>
        "Exclude NICs with MAC addresses that match this regexp from testing"},
     "URL"=>
      {:type=>"string",
       :default=>"3000/test_file",
       :comment=>"Relative to server PORT:URL to be fetched and checked"},
     "TIMEOUT"=>
      {:type=>"int",
       :default=>"15",
       :comment=>"Wait timeout while test file retrieving, sec"},
     "MD5"=>
      {:type=>"string",
       :default=>"805414334eb1d3ff4fdca507ec82098f",
       :comment=>"MD5 checksum for checking"}},
   :name=>"Network interface",
   :description=>"Network interfaces testing",
   :version=>"0.2",
   :depends=>["NIC"],
   :destroys_hdd=>false},
 "odd_write"=>
  {:is_interactive=>true,
   :poweroff_during_test=>false,
   :var=>
    {"WRITE_SPEED_FORCE"=>
      {:type=>"boolean",
       :default=>"true",
       :comment=>"Force write speed using"},
     "TEST_IMAGE_BLOCKS"=>
      {:type=>"int",
       :default=>"332800",
       :comment=>"This images size in blocks (2048 bytes each)"},
     "FORCE_NON_INTERACTIVE"=>
      {:type=>"boolean",
       :default=>"false",
       :comment=>"Force non-interactive mode for already prepared system"},
     "TEST_IMAGE_MD5"=>
      {:type=>"string",
       :default=>"ffffffffffffffffffffffffffffffff",
       :comment=>"Test image MD5 hash"},
     "WRITE_MESSAGE"=>
      {:type=>"string",
       :default=>"Writing test disc",
       :comment=>"Message to print when test will start"},
     "WRITE_SPEED"=>
      {:type=>"int",
       :default=>"10",
       :comment=>"Default write speed if it won't detect"},
     "TEST_IMAGE"=>
      {:type=>"string",
       :default=>"iso/testimage.iso",
       :comment=>"ISO image path (absolute or relative)"}},
   :name=>"odd_write",
   :description=>"Optical Disc Drive write test",
   :version=>"0.1",
   :depends=>["ODD"],
   :destroys_hdd=>false},
 "gprs-modem-level"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>
    {"CHAT_TIMEOUT"=>
      {:type=>"int",
       :default=>"5",
       :comment=>"Timeout for waiting for answer"},
     "DEV"=>
      {:type=>"string",
       :default=>"/dev/ttyUSB0",
       :comment=>"Name of device to test"}},
   :name=>"USB GPRS modem signal level",
   :description=>
    "Measure signal level, received by GPRS modem, connected via USB",
   :version=>"0.1",
   :destroys_hdd=>false},
 "hdparm"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>
    {"AVG_SAMPLES"=>
      {:type=>"int",
       :default=>"5",
       :comment=>"Number of tests per disc to average for result"}},
   :name=>"HDD speed benchmark: hdparm",
   :description=>
    "This benchmark runs on all hard drives in the system sequentally. Every hard drive is benchmarked for buffered speed and cached speed using basic hdparm test several times. The results for every HDD are averaged and submitted as benchmark results.",
   :version=>"0.1",
   :depends=>["Disk Controller", "HDD"],
   :destroys_hdd=>false},
 "unixbench"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>{},
   :name=>"Unixbench",
   :description=>"UNIX Bench Multi-CPU benchmark",
   :version=>"0.1",
   :depends=>["CPU", "Memory", "Mainboard"],
   :destroys_hdd=>false},
 "hdd-passthrough"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>
    {"JOBS"=>
      {:type=>"int",
       :default=>"16",
       :comment=>
        "Number of parallely running jobs during stress test tree compile"},
     "DISK_GROUP_SIZE"=>
      {:type=>"int",
       :default=>"8",
       :comment=>"Number of disks per group for testing"},
     "MINIMAL_STRESS_TIME"=>
      {:type=>"int",
       :default=>"600",
       :comment=>"Minimal time of stress testing"},
     "RAMDISK_SIZE"=>
      {:type=>"int",
       :default=>"400",
       :comment=>"Size of memory disk for stress tree building, MB"},
     "STRESS_TREE"=>
      {:type=>"string",
       :default=>"linux-2.6.22.5-31-stress.tar.gz",
       :comment=>"Tarball file containing stress test tree"}},
   :name=>"HDD passthrough",
   :description=>
    "HDD passthrough is a stress test that imposes heavy load on main system components. First, it tries to make all HDDs present in system to appear as separate device nodes - it checks all available RAID controllers, deletes all arrays / disk groups and creates passthrough devices to access individual HDDs if required. Second, it runs badblocks test on every available HDD, separating them in groups for simultaneous badblocks (8 HDDs doing badblocks simultaneously by default). Third, it makes a ramdisk filesystem and starts infinite compilation loop in memory, doing so with 16 simulatenous jobs (by default). Test ends successfully after both 1) minimal required stress time passes, 2) all HDDs get checked with badblocks. Test would fail if any bad blocks would be detected on any HDD. Test will usually hang or crash the system on unstable hardware.",
   :version=>"0.1",
   :depends=>["CPU", "HDD", "Memory", "Mainboard", "Disk Controller"],
   :destroys_hdd=>true},
 "hdd-smart"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>{},
   :name=>"HDD SMART",
   :description=>
    "This test starts internal SMART tests for every HDD available. These tests usually put heavy load on drive with lots of internal block reading/writing operations, though it's all done transparently by HDD's firmware in background. This test does not destroy any data on HDDs.",
   :version=>"0.1",
   :depends=>["HDD", "Disk Controller"],
   :destroys_hdd=>false},
 "cpu"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>
    {"TESTTIME"=>
      {:type=>"int",
       :default=>"1800",
       :comment=>"Total time of CPU testing, sec"}},
   :name=>"CPU burning",
   :description=>"CPU burn-in testing",
   :version=>"0.1",
   :depends=>["CPU"],
   :destroys_hdd=>false},
 "usb-device"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>
    {"IDVENDOR"=>
      {:type=>"string",
       :default=>"0403",
       :comment=>
        "Filter in only devices with this idVendor (match all if empty)"},
     "COUNT"=>
      {:type=>"int",
       :default=>"1",
       :comment=>"There should be this many devices"},
     "IDPRODUCT"=>
      {:type=>"string",
       :default=>"6001",
       :comment=>
        "Filter in only devices with this idProduct (match all if empty)"}},
   :name=>"USB presence",
   :description=>"Tests presence of designated USB device",
   :version=>"0.1",
   :depends=>["USB"],
   :destroys_hdd=>false},
 "bonnie"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>{},
   :name=>"Bonnie",
   :description=>"Bonnie HDD performance benchmark",
   :version=>"0.1",
   :depends=>["HDD"],
   :destroys_hdd=>true},
 "whetstone"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>{"LOOPS"=>{:type=>"int", :default=>"20000", :comment=>"Loop count"}},
   :name=>"Whetstone",
   :description=>"Whetstone floating-point calculations benchmark",
   :version=>"0.1",
   :depends=>["CPU"],
   :destroys_hdd=>false},
 "flash"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>
    {"SIZE_LIMIT"=>
      {:type=>"int",
       :default=>"2048",
       :comment=>"That is less than this amount is an IDE flash, MiB"}},
   :name=>"Flash disk",
   :description=>"Flash disk badblocks test",
   :version=>"0.1",
   :destroys_hdd=>true},
 "db_comparison"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>{},
   :name=>"DB to Detects comparison",
   :description=>
    "Pauses testing until comparison has been completed on application server",
   :version=>"0.1",
   :depends=>
    ["BMC",
     "CPU",
     "Chassis",
     "Disk Controller",
     "Floppy",
     "HDD",
     "Mainboard",
     "Memory",
     "NIC",
     "OSD",
     "Platform",
     "USB",
     "Video"],
   :destroys_hdd=>false},
 "bytemark"=>
  {:is_interactive=>false,
   :poweroff_during_test=>false,
   :var=>{},
   :name=>"BYTEmark",
   :description=>"BYTEmark native mode benchmark",
   :version=>"0.1",
   :depends=>["CPU", "Memory", "Mainboard"],
   :destroys_hdd=>false}}

$MONITORINGS = [nil, "hdd-smart"]

