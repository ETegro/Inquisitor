#!/usr/bin/env ruby

# A minimalistic configure that parses all test metainformation and
# generates tests-meta.rb file for use with planner and profiles

require 'pp'
require 'ostruct'

TESTS_DIR='../../../../client/test'
MONITORINGS_DIR='../../../../client/monitoring'
DETECTS_DIR='../../../../client/detect'
SOFTWARE_DETECTS_DIR='../../../../client/software-detect'

tests = {}

Dir.new(TESTS_DIR).each { |entry|
	next unless FileTest.file?("#{TESTS_DIR}/#{entry}")

	tests[entry] = t = {
		:name => nil,
		:description => nil,
		:version => nil,
		:destroys_hdd => false,
		:is_interactive => false,
		:poweroff_during_test => false,
		:var => {}
	}

	File.open("#{TESTS_DIR}/#{entry}", 'r').each_line { |l|
		case l
		when /^# NAME=(.*)$/ then t[:name] = $1
		when /^# DESCRIPTION=(.*)$/ then t[:description] = $1
		when /^# VERSION=(.*)$/ then t[:version] = $1
		when /^# DESTROYS_HDD=true$/ then t[:destroys_hdd] = true
		when /^# IS_INTERACTIVE=true$/ then t[:is_interactive] = true
		when /^# POWEROFF_DURING_TEST=true$/ then t[:poweroff_during_test] = true
		when /^# DEPENDS=(.*)$/ then t[:depends] = $1.split(/ *, */)
		when /^# VAR=(.*?):(.*?):(.*?):(.*)$/
			t[:var][$1] = {
				:type => $2,
				:default => $3,
				:comment => $4,
			}
		end
	}
}

monitorings = {}

Dir.new(MONITORINGS_DIR).each { |entry|
	next unless FileTest.file?("#{MONITORINGS_DIR}/#{entry}")
	
	monitorings[entry] = m = {
		:id => nil,
		:name => nil,
		:description => nil,
		:measurement => nil
	}	
	
	File.open("#{MONITORINGS_DIR}/#{entry}", 'r').each_line { |l|
		m[:id] = $1.to_i if l =~ /^# ID=(.*)$/
		m[:name] = $1 if l =~ /^# NAME=(.*)$/
		m[:description] = $1 if l =~ /^# DESCRIPTION=(.*)$/
		m[:measurement] = $1 if l =~ /^# MEASUREMENT=(.*)$/
	}
}

detects = {}

Dir.new(DETECTS_DIR).each { |entry|
	next unless FileTest.file?("#{DETECTS_DIR}/#{entry}")

	detects[entry] = m = {
		:name => nil,
		:description => nil,
		:depends => nil
	}

	File.open("#{DETECTS_DIR}/#{entry}", 'r').each_line { |l|
		m[:name] = $1 if l =~ /^# NAME=(.*)$/
		m[:description] = $1 if l =~ /^# DESCRIPTION=(.*)$/
		m[:depends] = $1.split(/ *, */) if l =~ /^# DEPENDS=(.*)$/
	}
}

software_detects = {}

Dir.new(SOFTWARE_DETECTS_DIR).each { |entry|
	next unless FileTest.file?("#{SOFTWARE_DETECTS_DIR}/#{entry}")

	software_detects[entry] = m = {
		:name => nil,
		:description => nil
	}

	File.open("#{SOFTWARE_DETECTS_DIR}/#{entry}", 'r').each_line { |l|
		m[:name] = $1 if l =~ /^# NAME=(.*)$/
		m[:description] = $1 if l =~ /^# DESCRIPTION=(.*)$/
	}
}

File.open('meta.rb', 'w') { |out|
	out.print <<__EOF__
# DO NOT EDIT: IT'S A GENERATED FILE! USE ./configure to REGENERATE!

$TESTS = #{tests.pretty_inspect}
$MONITORINGS = #{monitorings.pretty_inspect}
$DETECTS = #{detects.pretty_inspect}
$SOFTWARE_DETECTS = #{software_detects.pretty_inspect}
__EOF__
}
