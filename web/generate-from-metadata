#!/usr/bin/env ruby

require '../trunk/server/web/lib/planner/meta'

File.open('src/doc/test.page', 'w') { |f|
	f.puts <<__EOF__
---
title: Tests
inMenu: true
orderInfo: 30
---
h2. Tests

Tests are modules of Inquisitor that do the real work. They usually do
one specific action and can return binary result: passed or failed.
Tests are usually ran automatically by
<a href="{relocatable: scheduler.page}">scheduler</a>, but can be
<a href="{relocatable: manual-invocation.page}">invoked manually</a>,
as a regular executable with parameters. All tests follow the
same format (which is described in
<a href="{relocatable: test-format.page}">test format</a> section).

Current version of Inquisitor includes the following tests:

<table class="toc">
<tr><th>#</th><th>Script</th><th>Title</th><th>Components tested</th></tr>
__EOF__

	n = 0
	$TESTS.keys.sort.each { |k|
		v = $TESTS[k]
		n += 1
		f.puts "<tr><td style=\"text-align: right\">#{n}</td><td>#{k}</td><td><a href=\"##{k}\">#{v[:name]}</a></td><td>#{v[:depends].join(', ') if v[:depends]}</td></tr>"
	}
	f.puts "</table>\n\n"

	$TESTS.keys.sort.each { |k|
		v = $TESTS[k]
		f.puts "h3. <a name=\"#{k}\"></a>#{v[:name]} (#{k})"
		f.puts
		f.puts "<div class=\"infobox\"><img src=\"{relocatable:/images/hdd-destructive.png}\" width=\"64\" height=\"64\" title=\"Test destroys contents of HDD\" alt=\"Test destroys contents of HDD\" /></div>" if v[:destroys_hdd]
		f.puts
		f.puts "#{v[:description]}"
		f.puts
		if v[:depends] and not v[:depends].empty? then
			f.puts "* *Components tested:* #{v[:depends].join(', ')}"
		end
		if v[:var] and not v[:var].empty? then
			f.puts "* *Variables:*"
			v[:var].keys.sort.each { |name|
				var = v[:var][name]
				f.print "** *#{name}* (#{var[:type]}, default: "
				f.print var[:default].empty? ? '_empty_' : "@#{var[:default]}@"
				f.puts ") &mdash; #{var[:comment]}"
			}
		end
		f.puts
	}
}
