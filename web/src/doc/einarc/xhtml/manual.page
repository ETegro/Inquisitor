---
title: Reference manual
inMenu: false
directoryName: Einarc
--- content,html
<div class="article" lang="en" xml:lang="en"><div class="titlepage"><div><div><h2>Einarc: Reference manual</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="#_concept">1. Concept</a></span></dt><dt><span class="section"><a href="#_architecture">2. Architecture</a></span></dt><dt><span class="section"><a href="#_supported_devices">3. Supported devices</a></span></dt><dt><span class="section"><a href="#_installation">4. Installation</a></span></dt><dt><span class="section"><a href="#_command_line_interface_cli">5. Command-line interface (CLI)</a></span></dt><dt><span class="section"><a href="#_application_programming_interface_api">6. Application programming interface (API)</a></span></dt><dd><dl><dt><span class="section"><a href="#_add_libraries">6.1. Add libraries</a></span></dt><dt><span class="section"><a href="#_listing_available_adapters">6.2. Listing available adapters</a></span></dt><dt><span class="section"><a href="#_create_adapter_objects">6.3. Create adapter objects</a></span></dt><dt><span class="section"><a href="#_use_adapter_object_methods">6.4. Use adapter object methods</a></span></dt><dt><span class="section"><a href="#_error_handling">6.5. Error handling</a></span></dt></dl></dd><dt><span class="section"><a href="#object_interface">7. Object interface</a></span></dt><dd><dl><dt><span class="section"><a href="#_query_special">7.1. query (special)</a></span></dt><dt><span class="section"><a href="#_adapter">7.2. adapter</a></span></dt><dt><span class="section"><a href="#_log">7.3. log</a></span></dt><dt><span class="section"><a href="#_physical">7.4. physical</a></span></dt><dt><span class="section"><a href="#_logical">7.5. logical</a></span></dt><dt><span class="section"><a href="#_task">7.6. task</a></span></dt><dt><span class="section"><a href="#_firmware">7.7. firmware</a></span></dt></dl></dd><dt><span class="section"><a href="#_planned_features">8. Planned features</a></span></dt><dd><dl><dt><span class="section"><a href="#_more_devices">8.1. More devices</a></span></dt><dt><span class="section"><a href="#_general_features">8.2. General features</a></span></dt></dl></dd></dl></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="_concept"></a>1. Concept</h2></div></div></div><p>Hardware RAID controllers are complex devices: essentially, it's a
computer inside a computer. It has it's own processor (or may be
processors), it usually has it's own RAM, and, most important, it runs
its own software, which is usually a fairly complex operating system
that manages physical discs, hides all the RAID magic behind the
curtains and allows the host operating system to see only few logical
discs.</p><p>Unfortunately, most of the RAID controllers are proprietary. It's a
well-known fact that physical discs used on controller A are
incompatible with some other controller B (even worse, they can be
incompatible between various revisions of firmware of controller A).
RAID's firmware hides all the intricate management of discs from the
system administrator. Administrator can control RAID using either:</p><div class="itemizedlist"><ul type="disc"><li><p>
BIOS OPROM, which is available by pressing some magic key when the
computer's booting.
</p><div class="itemizedlist"><ul type="circle"><li>
<span class="strong"><strong>Pros</strong></span>: it's basic and solid method, it works, it doesn't require
     any OS installed (can be done before OS installation), it works
     even if OS is broken, etc.
</li><li>
<span class="strong"><strong>Cons</strong></span>: it requires rebooting of computer when trying to edit RAID
     or even to check/monitor its state (which is hard to do remotely
     without KVM-over-IP or similar solution), it requires manual
     intervention, it's not scriptable (= it's hard to create the same
     RAID configuration on 1000 machines), and, most of all, every
     RAID controller model or vendor has his own version of such OPROM
     utility, incompatible with each other even in terms they use.
</li></ul></div></li><li><p>
Some management utilities, running in OS. Such utilities are mostly
proprietary, provided by vendors, available in binary-only form.
</p><div class="itemizedlist"><ul type="circle"><li>
<span class="strong"><strong>Pros</strong></span>: they usually include command-line interface (they're
    scriptable), they're suitable to call regularly and automatically
    to monitor status of discs, they don't require rebooting, etc.
</li><li>
<span class="strong"><strong>Cons</strong></span>: of course, they require booted OS to run, and, worst of
    all, they're also very incompatible with each other.
</li></ul></div></li></ul></div><p>Einarc project tries to solve such problem: provide a <span class="strong"><strong>unified, solid
interface to manage all possible storage devices</strong></span>.</p></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="_architecture"></a>2. Architecture</h2></div></div></div><p>Einarc unifies various RAIDs and storage devices, providing a
<a class="link" href="#object_interface" title="7.&#xA0;Object interface">simple object interface</a> for end-user. Inside, it
works as a proxy, translating commands from that object interface to
RAID-specific commands for it's proprietary CLI, and back, it
translates response from proprietary CLI into unified answer.</p><div class="figure"><a id="id283467"></a><p class="title"><b>Figure 1. Einarc architecture diagram</b></p><div class="figure-contents"><div class="mediaobject"><img src="images/einarc-architecture.png" alt="Einarc architecture diagram" /></div></div></div><br class="figure-break" /><p>Support for various RAIDs is implemented as classes. Each class has to
implement a couple of methods that would translate requests.</p><div class="itemizedlist"><ul type="disc"><li>
Common unit of size used is Megabyte = 1024 * 1024 bytes. Various
  adapters provide various interfaces and size units, so X megabytes
  on one adapter may differ from X megabytes on some other adapter.
</li></ul></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="_supported_devices"></a>3. Supported devices</h2></div></div></div><p>Currently, there are following modules available:</p><div class="itemizedlist"><ul type="disc"><li>
<span class="strong"><strong>adaptec_aaccli</strong></span> - supports older Adaptec SCSI RAID controllers, such
as Adaptec SCSI RAID 2230SLP, Adaptec SCSI RAID 2130SLP, Adaptec SCSI
RAID 2120S, Adaptec SCSI RAID 2020ZCR, Adaptec SCSI RAID 2025ZCR.
</li><li>
<span class="strong"><strong>adaptec_arcconf</strong></span> - supports newer Adaptec SAS/SATA RAID controllers,
such as Adaptec RAID 5405, Adaptec RAID 5445, Adaptec RAID 5805, Adaptec
RAID 5085, Adaptec RAID 51245, Adaptec RAID 51645, Adaptec RAID 52445,
Adaptec RAID 3405, Adaptec RAID 3085, Adaptec RAID 3805, Adaptec RAID
31205, Adaptec RAID 31605, Adaptec RAID 2405, Adaptec RAID 2045, Adaptec
RAID 4000, Adaptec RAID 4800SAS, Adaptec RAID 4805SAS.
</li><li>
<span class="strong"><strong>amcc</strong></span> - supports all AMCC/3ware controllers, such as 3ware 7000
series, 3ware 8000 series, 3ware 9690SA, 3ware 9650SE, 3ware 9550SX,
3ware 9500S, 3ware 8506.
</li><li>
<span class="strong"><strong>areca</strong></span> - supports all Areca SATA RAID controllers, such as ARC-1110,
ARC-1120, ARC-1130, ARC-1160, ARC-1130ML, ARC-1160ML, ARC-1170,
ARC-1200, ARC-1210, ARC-1220, ARC-1230, ARC-1260, ARC-1231ML,
ARC-1261ML, ARC-1280ML, ARC-1280.
</li><li>
<span class="strong"><strong>lsi_megacli</strong></span> - supports newer LSI MegaRAID SAS/SATA RAID controllers, such
as LSI MegaRAID SAS 8208ELP, LSI MegaRAID SAS 8208XLP, LSI MegaRAID SAS
8204ELP, LSI MegaRAID SAS 8204XLP, LSI MegaRAID SAS 84016E, LSI MegaRAID
SAS 8704ELP, LSI MegaRAID SAS 8708ELP, LSI MegaRAID SAS 8300XLP, LSI
MegaRAID SAS 8708EM2, LSI MegaRAID SAS 8888ELP, LSI MegaRAID SAS
8880EM2, as well as rebranded copies of these controllers from Dell, HP
and Intel, as well as all on-board or daughterboard products based on
LSI SAS 1078 chipset.
</li><li>
<span class="strong"><strong>lsi_megarc</strong></span> - support older LSI MegaRAID SCSI/SATA RAID controllers,
such as  LSI MegaRAID SATA 150-4 (523), LSI MegaRAID SATA 150-6 (523),
LSI MegaRAID SATA 300-8X, LSI MegaRAID SATA 300-8XLP, LSI MegaRAID SATA
300-4XLP, LSI MegaRAID SCSI 320-0 (520-0 CH), LSI MegaRAID SCSI 320-0X
(530), LSI MegaRAID SCSI 320-1 (520-1CH), LSI MegaRAID SCSI 320-1LP
(520-1 CH LP), LSI MegaRAID SCSI 320-2 (518), LSI MegaRAID SCSI 320-2E,
LSI MegaRAID SCSI 320-2X (532), as well as rebranded copies of these
controllers from Dell, HP and Intel, as well as all on-board or
daughterboard products based on LSI MegaRAID 160/320 or 150/300 chipset.
</li><li>
<span class="strong"><strong>lsi_mpt</strong></span> - Fusion/MPT, now branded as LSI MPT design of HBAs,
available in such adapters as LSI20160, LSIU320, LSI20320-R, LSI20320IE,
LSI21320-R, LSI22320-R, LSI22320SE.
</li><li>
<span class="strong"><strong>software</strong></span> - Linux software RAID device (md), for a sake of
completeness.
</li></ul></div><p>This is not a complete list. To check if your adapter is supported, just
run <code class="literal">./configure</code> without options to select all available modules.
There's a good chance that your adapter would be supported too.</p></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="_installation"></a>4. Installation</h2></div></div></div><p>Currently, Einarc is a sub-project of
<a class="ulink" href="http://www.inquisitor.ru/" target="_top">Inquisitor hardware testing framework</a> and can
be downloaded either bundled with Inquisitor itself or
<a class="ulink" href="http://www.inquisitor.ru/doc/einarc/" target="_top">from its own mini-homepage</a>.</p><p>After downloading, extract the contents of tarball (this would yield a
directory with sources), then run <code class="literal">./configure</code>. You can use the
following options:</p><div class="variablelist"><dl><dt><span class="term">
<code class="literal">—target=TARGET</code>
</span></dt><dd>
  target to build for; default is selected by looking up architecture of current host
</dd><dt><span class="term">
<code class="literal">—bindir=DIR</code>
</span></dt><dd>
  where to place user executables
</dd><dt><span class="term">
<code class="literal">—rubysharedir=DIR</code>
</span></dt><dd>
  ruby share directory
</dd><dt><span class="term">
<code class="literal">—rubylibdir=DIR</code>
</span></dt><dd>
  ruby binary extensions directory
</dd><dt><span class="term">
<code class="literal">—einarclibdir=DIR</code>
</span></dt><dd>
  proprietary extensions directory
</dd><dt><span class="term">
<code class="literal">—modules=LIST</code>
</span></dt><dd><p>
  a comma-separated list of storage support modules to build:
</p><div class="itemizedlist"><ul type="disc"><li>
all - SPECIAL: build all available modules, default
</li><li>
lsi_megarc - older LSI MegaRAID SCSI/SATA adapters
</li><li>
adaptec_arcconf - newer Adaptec adapters that use arcconf
</li><li>
amcc - 3Ware/AMCC RAID 7/8/9xxx/95xxx series controllers that use tw_cli
</li><li>
lsi_megacli - newest LSI MegaRAID SAS adapters
</li><li>
adaptec_aaccli - older Adaptec SCSI adapters that use aaccli
</li><li>
areca - Areca adapters
</li></ul></div></dd><dt><span class="term">
<code class="literal">-h</code>, <code class="literal">—help</code>
</span></dt><dd>
  show help
</dd></dl></div><p>After running <code class="literal">./configure</code> with options, file <code class="literal">Makefile.config</code> would
be created. You can check it out and edit by hand if necessary. Then run
<code class="literal">make</code> to start a build process. In fact, Einarc is written in a script
language and does not need build, but we use the build stage to download
all the proprietary CLIs that would be required to support requested
controllers.</p><p>After downloading, unpacking and preparing all required tools, you can
run <code class="literal">make install</code> (usually requires root privileges) to install Einarc
in your system.</p></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="_command_line_interface_cli"></a>5. Command-line interface (CLI)</h2></div></div></div><p>Simplest way to use Einarc is to use command-line interface. Einarc
can be invoked using:</p><p><code class="literal">einarc [options] &lt;object&gt; &lt;method&gt; &lt;parameters&gt;</code></p><p>Options:</p><div class="variablelist"><dl><dt><span class="term">
<code class="literal">-l</code>, <code class="literal">—list</code>
</span></dt><dd>
  list all adapters found in system and exit
</dd><dt><span class="term">
<code class="literal">-V</code>, <code class="literal">—version</code>
</span></dt><dd>
  print program version and exit
</dd><dt><span class="term">
<code class="literal">—help</code>
</span></dt><dd>
  show short help text and exit
</dd><dt><span class="term">
<code class="literal">-h</code>, <code class="literal">—human</code>
</span></dt><dd>
  output human-readable information
</dd><dt><span class="term">
<code class="literal">-t</code>, <code class="literal">—type=TYPE</code>
</span></dt><dd>
  type (manufacturer) of RAID adapter
</dd><dt><span class="term">
<code class="literal">-a</code>, <code class="literal">—adapter=NUM</code>
</span></dt><dd>
  select the adapter if multiple adapters are present
</dd></dl></div><p>Refer to <a class="link" href="#object_interface" title="7.&#xA0;Object interface">object interface description</a> for particular object.</p><p>Note that command-line interface is always ready to provide a
hint. For example, one can forget almost everything and start with
just calling "einarc". Consider this session:</p><pre class="literallayout">$ einarc
Adapter type not specified: use --list to list all adapters and choose one
$ einarc --list
areca   1       ARC-1160        PCI
$ einarc -h -t areca
Object not specified; available objects: logical, log, adapter, task, physical</pre><p>Let's start with showing all logical drives. We don't know what method
we should choose, but Einarc will give a hint:</p><pre class="literallayout">$ einarc -h -t areca logical
Command not specified; available commands: list, add, delete, clear, get, set
$ einarc -h -t areca logical list
#  RAID level   Physical drives                 Capacity     Device  State
1  5            0:1,0:2,0:4,0:5,0:8            762939.45 MB          normal
2  1+0          0:6,0:7                        190734.86 MB          normal
3  5            0:9,0:10,0:11,0:12,0:13       1907348.63 MB          normal
4  1+0          0:15,0:16                      476837.16 MB          normal</pre><p>More complex example: let's check if a physical drive is hotspare drive
or not. Such simple boolean flag is available as a property of
<code class="literal">physical</code> object, and Einarc will give a hint on how to get it and when
to add a reference to particular physical disc ID:</p><pre class="literallayout">$ einarc -h -t areca physical
Command not specified; available commands: list, get, set
$ einarc -h -t areca physical get
Object identifier not specified
$ einarc -h -t areca physical get 0:1
Property not specified; available properties: hotspare
$ einarc -h -t areca physical get 0:1 hotspare
0</pre><p>Getting a property of adapter is in fact even simpler: there shouldn't
be any IDs. Here we'll get a list of all RAID levels a particular
adapter supports:</p><pre class="literallayout">$ einarc -h -t areca adapter
Command not specified; available commands: info, restart, get, set
$ einarc -h -t areca adapter get
Property not specified; available properties: raidlevels
$ einarc -h -t areca adapter get raidlevels
0
1
1E
10
3
5
6</pre></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="_application_programming_interface_api"></a>6. Application programming interface (API)</h2></div></div></div><p>Einarc's libraries can be called directly with almost the same object
terms as from the command-line interface.</p><p>Einarc is written in Ruby and thus can be used easily from this script
language. Using Einarc API in your program takes a few simple steps:</p><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_add_libraries"></a>6.1. Add libraries</h3></div></div></div><p>Einarc modules should be loaded before use. Adding the following require
statement would automatically load all available RAID support modules:</p><pre class="literallayout">require 'raid/baseraid'</pre></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_listing_available_adapters"></a>6.2. Listing available adapters</h3></div></div></div><p>To find out which adapters are available, use:</p><pre class="literallayout">RAID::BaseRaid.query_adapters</pre><p>This would return you an array of hashes, one element of array for each
adapter found, for example:</p><pre class="literallayout">[{:driver=&gt;"areca", :version=&gt;"PCI", :num=&gt;1, :model=&gt;"ARC-1160"}]</pre></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_create_adapter_objects"></a>6.3. Create adapter objects</h3></div></div></div><p>Instantiate a particular adapter object, for example:</p><pre class="literallayout">a = RAID::Areca.new</pre></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_use_adapter_object_methods"></a>6.4. Use adapter object methods</h3></div></div></div><p>After adapter object <span class="strong"><strong>a</strong></span> is created, one can use all the methods described
in object interface using a simple convention.</p><div class="itemizedlist"><ul type="disc"><li><p>
If method <span class="strong"><strong>does not return</strong></span> anything, it's just
</p><pre class="literallayout">a.object_method(all, other, arguments, ...)</pre><p>for example:</p><pre class="literallayout">a.logical_clear</pre></li><li><p>
If method should <span class="strong"><strong>return its data as Ruby objects</strong></span> (a hash, an array, an
array of hashes, etc), then it should be called as
</p><pre class="literallayout">a._object_method(all, other, arguments, ...)</pre><p>Note the beginning underscore. An example:</p><pre class="literallayout">a._adapter_info
=&gt; {"PCI product ID"=&gt;"1160", "System Memory"=&gt;"256MB/333MHz",
    "Current IP Address"=&gt;"192.168.0.1", "Controller Name"=&gt;"ARC-1160",
    "BOOT ROM Version"=&gt;"V1.39 2006-1-4  ", "CPU DCache Size"=&gt;"32KB",
    "Main Processor"=&gt;"500MHz", "Firmware version"=&gt;"V1.39 2006-2-9  ",
    "PCI vendor ID"=&gt;"17d3", "CPU ICache Size"=&gt;"32KB",
    "Serial number"=&gt;"XXXXXXXXXXXXXXXX"}</pre></li><li><p>
If method should <span class="strong"><strong>print whatever strings Einarc CLI displays</strong></span>, it
should be called as:
</p><pre class="literallayout">a.object_method(all, other, arguments, ...)</pre><p>For example:
 a.adapter_info
 PCI product ID          1160
 System Memory           56MB/333MHz
 Current IP Address      192.168.10.111
 …</p></li></ul></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_error_handling"></a>6.5. Error handling</h3></div></div></div><p>All RAID-related activities raise an exception of class <code class="literal">RAID::Error</code> on
error.</p></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="object_interface"></a>7. Object interface</h2></div></div></div><p>Einarc exposes a relatively simple and straight-forward object model for
an end-user.</p><div class="figure"><a id="id325315"></a><p class="title"><b>Figure 2. Einarc objects</b></p><div class="figure-contents"><div class="mediaobject"><img src="images/einarc-objects.png" alt="Einarc objects" /></div></div></div><br class="figure-break" /><p>Every computer (host) may have one or more adapters (object <code class="literal">adapter</code>).
Adapters provide RAID services as logical discs (object <code class="literal">logical</code>) that
are usually seen in OS as individual devnodes. Logical discs may include
one or more physical discs (object <code class="literal">physical</code>). Physical discs are
usually hidden from the OS and are accessible only through proprietary
CLI. Adapters also may keep some history of what events happened in the
past and what objects were involved (object <code class="literal">log</code>). Finally, adapters
being little computers with their own operating system and multi-tasking
may perform separate background tasks, such as building/rebuilding or
checking of the array (object <code class="literal">task</code>).</p><p>Each of these objects have a couple of methods described below. Some of
these objects have named properties that can be read using <code class="literal">get</code> and
written using <code class="literal">set</code>. Some of the properties are read-only (only <code class="literal">get</code>
would work), some are write-only (only <code class="literal">set</code> would work).</p><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_query_special"></a>7.1. query (special)</h3></div></div></div><p>A special function that lists available adapters of current
model. This function is not called directly through object model, but
called indirectly, iterating over all support drivers when performing
an <code class="literal">-l</code> (<code class="literal">—list</code>) command line command to list all available and
supported adapters.</p><p>Output is tab-separated strings in format:</p><div class="informaltable"><table cellpadding="4px" style="border-collapse: collapse;border-top: 2px solid #527bbd; border-bottom: 2px solid #527bbd; "><colgroup><col align="right" /><col align="center" /><col align="center" /><col align="center" /></colgroup><thead><tr><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    Driver
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    Adapter ID
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    Adapter model
    </th><th style="border-bottom: 1px solid ; " align="center">
    Adapter serial number / version
    </th></tr></thead><tbody><tr><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    lsi_megarc
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    00
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    MegaRAID SCSI 320-1
    </td><td style="border-bottom: 1px solid ; " align="center">
    40LD/8SPAN
    </td></tr><tr><td style="border-right: 1px solid ; " align="right">
    areca
    </td><td style="border-right: 1px solid ; " align="center">
    01
    </td><td style="border-right: 1px solid ; " align="center">
    ARC-1120
    </td><td style="" align="center">
    PCI
    </td></tr></tbody></table></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_adapter"></a>7.2. adapter</h3></div></div></div><p>"adapter" is an object related to the controller card. It stores various settings with properties that can be read and wriiten with <span class="strong"><strong>get</strong></span> and <span class="strong"><strong>set</strong></span> and can be examined for general info with <span class="strong"><strong>info</strong></span> command.</p><p>Properties:</p><div class="hlabeledlist"><table cellpadding="4px" style="border: none;"><colgroup><col /><col /></colgroup><tbody valign="top"><tr><td style="" valign="top"><p>
<span class="strong"><strong>alarm</strong></span>
</p></td><td style="" valign="top">
<p>
(mute, disable, enable) - mode of adapter's beeper alarm
</p>
</td></tr><tr><td style="" valign="top"><p>
<span class="strong"><strong>coercion</strong></span>
</p></td><td style="" valign="top">
<p>
(0, 1)
</p>
</td></tr><tr><td style="" valign="top"><p>
<span class="strong"><strong>rebuildrate</strong></span>
</p></td><td style="" valign="top">
<p>
(0-3) - a priority of rebuilding and other background tasks, 0 being the lowest (least percent of time slices goes to that tasks), 3 being the highest.
</p>
</td></tr></tbody></table></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_info"></a>7.2.1. info</h4></div></div></div><p>Gets general information about adapter. Information is returned as
key-value pairs. Some keys are fixed and are consistent across all adapters:</p><div class="itemizedlist"><ul type="disc"><li>
<code class="literal">Serial number</code>
</li><li>
<code class="literal">Firmware version</code>
</li><li>
<code class="literal">PCI vendor ID</code>
</li><li>
<code class="literal">PCI product ID</code>
</li><li>
<code class="literal">PCI subvendor ID</code>
</li><li>
<code class="literal">PCI subproduct ID</code>
</li></ul></div><p>Other keys are adapter- and implementation-specific and thus vary.</p><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd>
  none
</dd><dt><span class="term">
Output
</span></dt><dd><p>
  several tab-separated lines in format
</p><div class="informaltable"><table cellpadding="4px" style="border-collapse: collapse;border-top: 2px solid #527bbd; border-bottom: 2px solid #527bbd; "><colgroup><col align="right" /><col align="center" /></colgroup><thead><tr><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    Name
    </th><th style="border-bottom: 1px solid ; " align="center">
    Value
    </th></tr></thead><tbody><tr><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    Firmware Version
    </td><td style="border-bottom: 1px solid ; " align="center">
    1L37
    </td></tr><tr><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    BIOS Version
    </td><td style="border-bottom: 1px solid ; " align="center">
    G119
    </td></tr><tr><td style="border-right: 1px solid ; " align="right">
    DRAM
    </td><td style="" align="center">
    64MB
    </td></tr></tbody></table></div></dd></dl></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_get"></a>7.2.2. get</h4></div></div></div><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd>
  name of property
</dd><dt><span class="term">
Output
</span></dt><dd>
  value of property
</dd></dl></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_set"></a>7.2.3. set</h4></div></div></div><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd><div class="itemizedlist"><ul type="disc"><li>
name of property
</li><li>
value of property
</li></ul></div></dd><dt><span class="term">
Output
</span></dt><dd>
  none normally, error message if error happened
</dd></dl></div></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_log"></a>7.3. log</h3></div></div></div><p>"log" is an object to access adapter's event log in NVRAM.</p><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_clear"></a>7.3.1. clear</h4></div></div></div><p>Clears event log in NVRAM.</p><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd>
  none
</dd><dt><span class="term">
Output
</span></dt><dd>
  none normally, error message if error happened
</dd></dl></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="log_list"></a>7.3.2. list</h4></div></div></div><p>Display full event log in NVRAM.</p><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd>
  none
</dd><dt><span class="term">
Output
</span></dt><dd><p>
  log entries, one per line, in following tab-separated format:
</p><div class="informaltable"><table cellpadding="4px" style="border-collapse: collapse;border-top: 2px solid #527bbd; border-bottom: 2px solid #527bbd; "><colgroup><col align="right" /><col align="center" /><col align="center" /><col align="center" /><col align="center" /></colgroup><thead><tr><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    Entry ID
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    YYYY-MM-DD
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    HH:MI:SE
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    Where it happened
    </th><th style="border-bottom: 1px solid ; " align="center">
    What happened
    </th></tr></thead><tbody><tr><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    0
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    2006-12-04
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    14:13:24
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    ARC-1120-VOL#00
    </td><td style="border-bottom: 1px solid ; " align="center">
    Create Volume
    </td></tr><tr><td style="border-right: 1px solid ; " align="right">
    1
    </td><td style="border-right: 1px solid ; " align="center">
    2006-12-04
    </td><td style="border-right: 1px solid ; " align="center">
    14:13:24
    </td><td style="border-right: 1px solid ; " align="center">
    Raid Set # 00
    </td><td style="" align="center">
    Create RaidSet
    </td></tr></tbody></table></div></dd></dl></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_test"></a>7.3.3. test</h4></div></div></div><p>Posts a test message in log. Can be later read back to see that logging works.</p><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd>
  none
</dd><dt><span class="term">
Output
</span></dt><dd>
  none normally, error message if error happened; <a class="link" href="#log_list" title="7.3.2.&#xA0;list">log   list</a> would now return at least this test message.
</dd></dl></div></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_physical"></a>7.4. physical</h3></div></div></div><p>"physical" is an object to access physical disc drives attached to
adapter. It's possible to get list with <code class="literal">list</code> and read and write it's
properties and settings with <code class="literal">get</code> and <code class="literal">set</code>.</p><p><span class="strong"><strong>Physical disc address</strong></span> is <span class="strong"><strong>a</strong></span><code class="literal">:</code><span class="strong"><strong>b</strong></span>, where <span class="strong"><strong>a</strong></span> is channel number and <span class="strong"><strong>b</strong></span> is a device number on that channel. Usually, it's best to assume that it's a string to pass through.</p><p>Properties:</p><div class="itemizedlist"><ul type="disc"><li>
<span class="strong"><strong>hotspare</strong></span> (0, 1) - if true, a physical drive is considered a global hotspare.
</li><li>
<span class="strong"><strong>state</strong></span> (free, hotspare, <span class="strong"><strong>logical drive ID</strong></span>) - shows that drive is either free, reserved for hotspare, or belongs to the one of the logical drives (numeric).
</li></ul></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_list"></a>7.4.1. list</h4></div></div></div><p>Shows a list of all physical disc drives attached to adapter.</p><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd>
  none
</dd><dt><span class="term">
Output
</span></dt><dd><p>
  info on one disc drive per line, tab-separated:
</p><div class="informaltable"><table cellpadding="4px" style="border-collapse: collapse;border-top: 2px solid #527bbd; border-bottom: 2px solid #527bbd; "><colgroup><col align="right" /><col align="center" /><col align="center" /><col align="center" /><col align="center" /><col align="center" /></colgroup><thead><tr><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    Physical disc address
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    Drive vendor and model
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    Drive version, revision, firmware, misc info
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    Drive serial
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    Drive size
    </th><th style="border-bottom: 1px solid ; " align="center">
    Drive state
    </th></tr></thead><tbody><tr><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    0:1
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    WDC WD800JD-00J
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    05.01C05
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    WD-WMAM97310565
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    80000
    </td><td style="border-bottom: 1px solid ; " align="center">
    hotspare
    </td></tr><tr><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    0:2
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    WDC WD1600JB-00EVA0
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    15.05R15
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    WD-WMAEK1016963
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    160000
    </td><td style="border-bottom: 1px solid ; " align="center">
    0
    </td></tr><tr><td style="border-right: 1px solid ; " align="right">
    1:7
    </td><td style="border-right: 1px solid ; " align="center">
    WDC WD3200JD-00KLB0
    </td><td style="border-right: 1px solid ; " align="center">
    08.05J08
    </td><td style="border-right: 1px solid ; " align="center">
    WD-WMAMR1259708
    </td><td style="border-right: 1px solid ; " align="center">
    320000
    </td><td style="" align="center">
    free
    </td></tr></tbody></table></div></dd></dl></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_get_2"></a>7.4.2. get</h4></div></div></div><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd><div class="itemizedlist"><ul type="disc"><li>
physical disc address
</li><li>
name of property
</li></ul></div></dd><dt><span class="term">
Output
</span></dt><dd>
  value of property
</dd></dl></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_set_2"></a>7.4.3. set</h4></div></div></div><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd><div class="itemizedlist"><ul type="disc"><li>
physical disc address
</li><li>
name of property
</li><li>
value of property
</li></ul></div></dd><dt><span class="term">
Output
</span></dt><dd>
  none normally, error message if error happened
</dd></dl></div></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_logical"></a>7.5. logical</h3></div></div></div><p>Logical drive is a virtual drive, set up on regions of one or several physical drives. It is referenced with a <span class="strong"><strong>logical drive ID</strong></span>, a plain integer number.</p><p>Properties:</p><div class="itemizedlist"><ul type="disc"><li>
<span class="strong"><strong>raidlevel</strong></span> (passthrough, 0, 1, 5) - a RAID level of array or <span class="strong"><strong>passthrough</strong></span> - a special logical disc without any RAIDs that will directly access single physical disc.
</li><li>
<span class="strong"><strong>stripe</strong></span> - stripe size of logical drive in kilobytes; possible values vary with adapter, 64 is typical default.
</li><li>
<span class="strong"><strong>cache</strong></span> (writeback, writethrough) - a write cache mode.
</li><li>
<span class="strong"><strong>state</strong></span> (normal, degraded, initializing, migrating, rebuilding, checking) - state of array.
</li></ul></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_list_2"></a>7.5.1. list</h4></div></div></div><p>Displays a list of logical drives.</p><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd>
  none
</dd><dt><span class="term">
Output
</span></dt><dd><p>
  info on one logical drive per line, tab-separated:
</p><div class="informaltable"><table cellpadding="4px" style="border-collapse: collapse;border-top: 2px solid #527bbd; border-bottom: 2px solid #527bbd; "><colgroup><col align="right" /><col align="center" /><col align="center" /><col align="center" /><col align="center" /></colgroup><thead><tr><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    Logical drive ID
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    RAID level
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    Physical discs included, comma-separated
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    Capacity (MB)
    </th><th style="border-bottom: 1px solid ; " align="center">
    State
    </th></tr></thead><tbody><tr><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    1
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    0
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    0:1
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    80000
    </td><td style="border-bottom: 1px solid ; " align="center">
    normal
    </td></tr><tr><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    2
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    5
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    0:2,0:3,0:4
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    10000
    </td><td style="border-bottom: 1px solid ; " align="center">
    degraded
    </td></tr><tr><td style="border-right: 1px solid ; " align="right">
    3
    </td><td style="border-right: 1px solid ; " align="center">
    passthrough
    </td><td style="border-right: 1px solid ; " align="center">
    0:7
    </td><td style="border-right: 1px solid ; " align="center">
    73400
    </td><td style="" align="center">
    normal
    </td></tr></tbody></table></div></dd></dl></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_add"></a>7.5.2. add</h4></div></div></div><p>Creates one or more new logical drives.</p><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd><div class="itemizedlist"><ul type="disc"><li>
RAID level (as in <span class="strong"><strong>raidlevel</strong></span> property), for example <code class="literal">5</code>
</li><li>
<span class="strong"><strong>(optional)</strong></span> Physical discs to include, comma-separated, for example <code class="literal">0:2,0:3,0:4</code>. By default, use all available physical discs. Various RAID levels place limits on what arrays can be created with a given set of discs. Obviously, <span class="strong"><strong>passthrough</strong></span> can be created only on one physical disc.
</li><li>
<span class="strong"><strong>(optional)</strong></span> Size of logical discs to create, comma-separated, for example <code class="literal">200,3500</code>. By default, create one logical disc with maximal size. Not applicable while creating passthrough disc.
</li><li>
<span class="strong"><strong>(optional)</strong></span> Properties, comma-separated pairs of <code class="literal">name=value</code>, for example <code class="literal">stripe=64,cache=readahead</code>.
</li></ul></div></dd><dt><span class="term">
Output
</span></dt><dd>
  none normally, error message if error happened.
</dd></dl></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_delete"></a>7.5.3. delete</h4></div></div></div><p>Deletes a logical drive.</p><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd>
  logical drive ID.
</dd><dt><span class="term">
Output
</span></dt><dd>
  none normally, error message if error happened.
</dd></dl></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_clear_2"></a>7.5.4. clear</h4></div></div></div><p>Deletes all logical drives. Leaves array of free physical discs, ready
for creation of new array.</p><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd>
  none.
</dd><dt><span class="term">
Output
</span></dt><dd>
  none normally, error message if error happened.
</dd></dl></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_get_3"></a>7.5.5. get</h4></div></div></div><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd><div class="itemizedlist"><ul type="disc"><li>
logical drive ID
</li><li>
name of property
</li></ul></div></dd><dt><span class="term">
Output
</span></dt><dd>
  value of property
</dd></dl></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_set_3"></a>7.5.6. set</h4></div></div></div><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd><div class="itemizedlist"><ul type="disc"><li>
logical drive ID
</li><li>
name of property
</li><li>
value of property
</li></ul></div></dd><dt><span class="term">
Output
</span></dt><dd>
  none normally, error message if error happened.
</dd></dl></div></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_task"></a>7.6. task</h3></div></div></div><p>Tasks are processes that are executed in background on an adapter,
such as building or checking the logical disc.</p><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_list_3"></a>7.6.1. list</h4></div></div></div><p>Displays a list of tasks.</p><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd>
  none.
</dd><dt><span class="term">
Output
</span></dt><dd><p>
  info on one task per line, tab-separated:
</p><div class="informaltable"><table cellpadding="4px" style="border-collapse: collapse;border-top: 2px solid #527bbd; border-bottom: 2px solid #527bbd; "><colgroup><col align="right" /><col align="center" /><col align="center" /><col align="center" /></colgroup><thead><tr><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    Task ID
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    Where
    </th><th style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    What
    </th><th style="border-bottom: 1px solid ; " align="center">
    Progress
    </th></tr></thead><tbody><tr><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="right">
    112
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    0
    </td><td style="border-right: 1px solid ; border-bottom: 1px solid ; " align="center">
    Bld/Vfy
    </td><td style="border-bottom: 1px solid ; " align="center">
    0.0%
    </td></tr><tr><td style="border-right: 1px solid ; " align="right">
    113
    </td><td style="border-right: 1px solid ; " align="center">
    1:1
    </td><td style="border-right: 1px solid ; " align="center">
    Checking
    </td><td style="" align="center">
    24.0%
    </td></tr></tbody></table></div></dd></dl></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_wait"></a>7.6.2. wait</h4></div></div></div><p>Pauses further execution until all tasks are finished (it does so by
waiting while regularly polling the task list for changes).</p><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd>
  none
</dd><dt><span class="term">
Output
</span></dt><dd>
  none
</dd></dl></div></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_firmware"></a>7.7. firmware</h3></div></div></div><p>A special object that deals with adapter-related firmware
reading/writing operations.</p><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_read"></a>7.7.1. read</h4></div></div></div><p>Extracts a firmware from the adapter into a file.</p><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd>
  filename (would be overwritten)
</dd><dt><span class="term">
Output
</span></dt><dd>
  none normally, error message if error happened.
</dd></dl></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h4 class="title"><a id="_write"></a>7.7.2. write</h4></div></div></div><p>Flashes a firmware from a file into the adapter.</p><div class="variablelist"><dl><dt><span class="term">
Input
</span></dt><dd>
  filename
</dd><dt><span class="term">
Output
</span></dt><dd>
  none normally, error message if error happened.
</dd></dl></div></div></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="_planned_features"></a>8. Planned features</h2></div></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_more_devices"></a>8.1. More devices</h3></div></div></div><p>It's possible to implement support for the following storage devices in
Einarc:</p><div class="itemizedlist"><ul type="disc"><li>
FreeBSD's GEOM software RAID
</li><li>
Adaptec raidutils
</li><li>
Chelsio TOE
</li><li>
Emulex dfc / lputil
</li><li>
ICP Vortex RAID Storage Console - icpcon
</li><li>
HighPoint RocketRAID hptraidconf
</li><li>
Some HP rebranded controllers using HP Array Configuration Utility CLI
</li><li>
LSI (former IBM, former Mylex) DAC960/DAC1100
</li><li>
Promise CLI
</li><li>
QLogic SANsurferCLI / qlremote
</li></ul></div></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="_general_features"></a>8.2. General features</h3></div></div></div><p>Moreover, Einarc would be nice with:</p><div class="itemizedlist"><ul type="disc"><li>
Graphical UI
</li><li>
Web-based remote-accessible UI
</li><li>
Monitoring subsystem or plugin for Nagios
</li></ul></div></div></div></div>
