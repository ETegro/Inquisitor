#!/bin/sh

PUBLISH_DIR=$HOME/publish

# Set up null communications (only local storage of files)
init_communication()
{
	mkdir -p $PUBLISH_DIR
}

# Store file into publish directory for latter packaging
publish()
{
	cp "$1" "$PUBLISH_DIR/`basename $1`"
}

finalize()
{
	dialog --clear --yesno "Insert USB Flash" 5 40
	if [ $? = 0 ]; then
		sleep 15
		echo -n "Mount USB Flash:"
		mount /media/usbdisk >/dev/null 2>&1 && echo_success || echo_failure
		echo
		if mount | grep -q "/media/usbdisk"; then
			pushd ~/
				tar -cjf /media/usbdisk/`cat ~/old-full-serial | tr "/" "."`-`cat ~/publish/PROFILE`.tar.bz2 publish
			popd
			echo -n "Unmount USB Flash:"
			umount /media/usbdisk >/dev/null 2>&1 && echo_success || echo_failure
			echo
		fi
	fi
}

plan_test_script()
{
	cat <<__EOF__ >$HOME/test_script
PLANNER=1 TEST_NAME=cpu TESTTIME=1800 run_test cpu
PLANNER=1 TEST_NAME=memory TEST_LOOPS=1 LOGTIME=120 run_test memory
PLANNER=1 TEST_NAME=hdd-passthrough DISK_GROUP_SIZE=8 run_test hdd-passthrough
PLANNER=1 TEST_NAME=hdd-array JOBS=16 TIMEOUT=3600 STRESS_TREE=/usr/share/inquisitor/linux-2.6.22.5-31-stress.tar.gz LOGTIME=120 run_test hdd-array
PLANNER=1 TEST_NAME=net URL=3000/test_file.html TIMEOUT=30 MD5=ca658fd4159bc35698edf9a1cdd70876 run_test net
PLANNER=1 TEST_NAME=fdd FLOPPY_SIZE=1440 run_test fdd
PLANNER=1 TEST_NAME=odd_read MESH_POINTS=1024 TEST_IMAGE_BLOCKS=50000 FORCE_NON_INTERACTIVE=false TEST_IMAGE_HASH=2e8744dfd11bf425001aad57976d42cc run_test odd_read
__EOF__
}

test_stage_advance()
{
	local stage=$1
	local event=$2
	local comment=`echo -n "$3" | ruby -e 'require "cgi"; print CGI::escape($stdin.read)'`

	echo -n "Test $stage	$event" >>$HOME/stages.txt
	[ -z "$comment" ] || echo -n "	($comment)" >>$HOME/stages.txt
	echo "	`date`" >>$HOME/stages.txt
}

test_stage_progress()
{
	true
}

test_promise_time()
{
	true
}

submit_components()
{
	true
}

submit_additional_components()
{
	true
}

# Mark current testing as finished
testing_finished()
{
	true
}

set_ip()
{
	true
}

watchdog()
{
	true
}

publish_my_ip()
{
	true
}

benchmark_submit_float()
{
	echo "$1	$2" >>$HOME/benchmarks.txt
}

benchmark_submit_string()
{
	echo "$1	$2" >>$HOME/benchmarks.txt
}
