#!/bin/sh -e

. /etc/inquisitor/global
. $SHARE_DIR/functions
. $SHARE_DIR/communication
if [ -r $SHARE_DIR/init ] && ! [ -r /proc/cpuinfo ]; then
	. $SHARE_DIR/init
fi

# ===========================================================================
# Detects
# ===========================================================================

#saving logs
dmidecode > $HOME/dmi.log
decode-dimms.pl > $HOME/spd.log
ipmitool fru 2>/dev/null > $HOME/fru.log || true
lspci > $HOME/lspci.log
lshw 2>dev/null > $HOME/lshw.log

echo 'Starting detects'
for I in $SHARE_DIR/detect/*; do
	echo -n "Detecting `basename $I`"
	. $I
	echo_success
done
echo 'Detects finished'

#removing logs
rm -f $HOME/dmi.log
rm -f $HOME/spd.log
rm -f $HOME/fru.log
rm -f $HOME/lspci.log
rm -f $HOME/lshw.log

# ===========================================================================
# Self-identification
# ===========================================================================

echo 'Starting self-identification'
# Try various methods for self-id, stop after successful one
COMPUTER_ID=
for I in $SHARE_DIR/self-id/*; do
	echo -n "Trying self-id using $I"
	. $I
	if [ -n "$COMPUTER_ID" ]; then
		echo_success
		break
	else
		echo_failure
	fi
done
[ -n "$COMPUTER_ID" ] || fatal_failure 'Self-identification'

# Start logging
hostname c$COMPUTER_ID
/sbin/service syslog-ng start

#Set time
echo -n 'Trying set local time '
if [ -n "$NTP_SERVER" ]; then
	if /usr/sbin/ntpdate $NTP_SERVER $1>/dev/null && /sbin/hwclock --systohc; then
		echo_success
	else
		echo_failure
	fi
else
	echo -n '(ntp server does not set)'
	echo_skipped
fi

# Start watchdog, if available
watchdog_start

# ===========================================================================
# Submit configuration by REST
# ===========================================================================

submit_components $HOME/components.xml

#ifdef WATCHDOG
# ===========================================================================
# Set up watchdog
# ===========================================================================

#watchdog &
#IP_ADDRESS=`/sbin/ifconfig eth0 | grep 'inet addr:' | sed 's/^.*:\(.*\)  Bcast.*$/\1/;'`
#ssh $TESTER watchdog-command.rb --add "$MANUFACTURER" "$PRODUCT_NAME" "$SERIAL" "$IP_ADDRESS"
#success "Watchdog of $IP_ADDRESS started"
#endif

# ===========================================================================
# Run all tests
# ===========================================================================

PLANNER=1 TEST_NAME=cpu CPU_TEST_TIME=1800 CPU_LOG_TIME=120 . $SHARE_DIR/test/cpu
PLANNER=1 TEST_NAME=memory MEM_TEST_LOOPS=3 MEM_LOG_TIME=120 . $SHARE_DIR/test/memory
PLANNER=1 TEST_NAME=hdd-passthrough $SHARE_DIR/test/hdd-passthrough
PLANNER=1 TEST_NAME=hdd-array HDDARR_TIMEOUT=3600 HDDARR_LOGTIME=120 HDDARR_JOBS=4 . $SHARE_DIR/test/hdd-array
PLANNER=1 TEST_NAME=fdd FDD_SIZE=1440 . $SHARE_DIR/test/fdd
PLANNER=1 TEST_NAME=flash FLASH_SIZE_LIMIT=2048 . $SHARE_DIR/test/flash
PLANNER=1 TEST_NAME=odd_read ODD_TEST_IMAGE=/usr/share/inquisitor/testimage.iso ODD_TEST_IMAGE_BLOCKS=332800 ODD_MESH_POINTS=1024 . $SHARE_DIR/test/odd_read
PLANNER=1 TEST_NAME=odd_write ODD_TEST_IMAGE=/usr/share/inquisitor/testimage.iso ODD_TEST_IMAGE_BLOCKS=332800 ODD_WRITE_SPEED=10 . $SHARE_DIR/test/odd_write

bash
