#!/bin/sh -ef
# NAME=ODD read
# DESCRIPTION=Optical Disc Drive read test
# DESTROYS_HDD=false
# IS_INTERACTIVE=true
# POWEROFF_DURING_TEST=false
# VERSION=0.1
# TAGS=odd
# VAR=TEST_IMAGE_HASH:string:6fa7786eef2e11d36e8bc1663679f161:Default image for comparison hash
# VAR=TEST_IMAGE_BLOCKS:int:332800:This images size in blocks (2048 bytes each)
# VAR=MESH_POINTS:int:1024:Points for meshes for monitoring drive's speed

. /usr/share/inquisitor/functions-test

IMAGE=`mktemp`
RESULT_FILE=`mktemp`

detect_odd_quantity()
{
	ODD_QUANTITY=`hal-find-by-capability --capability storage.cdrom | wc -l`
}

test_odd()
{
	local odd=$1

	readcd -v dev=$odd f=$IMAGE sectors=0-$TEST_IMAGE_BLOCKS \
		meshpoints=$MESH_POINTS >$RESULT_FILE || true
	[ ! -s "$IMAGE" ] && dd if=$odd of=$IMAGE bs=2048 \
				count=$TEST_IMAGE_BLOCKS >/dev/null 2>&1

	[ `md5sum -b < $IMAGE | awk '{print $1}'` = $TEST_IMAGE_HASH ] && \
		FLAG=1 || FLAG=0
}

interactive()
{
	local odd=$1
	local non_passed=1

	while ( [ "$non_passed" -eq 1 ] ); do
		eject $odd || true
		print_green_message "Drive $(( $TESTED_QUANTITY + 1)):"
		print_green_message "Either press Y and insert media for testing, or n if you want to finish test: "
		read choice

		if [ "$choice" = "n" ]; then
			test_failed
			break
		fi

		FLAG=0
		test_odd $odd

		if [ "$FLAG" -eq 1 ]; then
			print_green_message "Drive test passed"
			TESTED_QUANTITY=$(( $TESTED_QUANTITY + 1 ))
			test_progress $TESTED_QUANTITY $ODD_QUANTITY
			non_passed=0

			generate_speed_results
			eject $odd || true
		else
			print_red_message "Drive test failed!"
		fi
	done
}

remove_test_image()
{
	rm -f $IMAGE
}

generate_speed_results()
{
	RESULTS=`perl -e '@l=map{split}<>;print join ",",@l' $RESULT_FILE`

	#here will be call to publish this monitoring results
}

detect_odd_quantity
[ "$ODD_QUANTITY" -eq 0 ] && return
TESTED_QUANTITY=0

for i in `get_odds_list`; do
	interactive $i
done

remove_test_image
test_succeeded
