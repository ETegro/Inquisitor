#!/bin/sh
# NAME=odd_read
# DESCRIPTION=Optical Disc Drive read test
# DESTROYS_HDD=N
# IS_INTERACTIVE=Y
# POWEROFF_DURING_TEST=N
# VERSION=0.1
# VAR=ODD_TEST_IMAGE_HASH:str:6fa7786eef2e11d36e8bc1663679f161:Default image for comparison hash
# VAR=ODD_TEST_IMAGE_BLOCKS:int:332800:This images size in blocks (2048 bytes each)
# VAR=ODD_MESH_POINTS:int:1024:Points for meshes for monitoring drive's speed

. /usr/share/inquisitor/functions-test

ODD_IMAGE=`mktemp`
RESULT_FILE=`mktemp`

detect_odd_quantity()
{
	ODD_QUANTITY=`hal-find-by-capability --capability storage.cdrom | wc -l`
}

test_odd()
{
	ODD=$1

	readcd -v dev=$ODD f=$ODD_IMAGE sectors=0-$ODD_TEST_IMAGE_BLOCKS meshpoints=$ODD_MESH_POINTS >$RESULT_FILE || true
	[ ! -s $ODD_IMAGE ] && dd if=$ODD of=$ODD_IMAGE bs=2048 count=$ODD_TEST_IMAGE_BLOCKS >/dev/null 2>&1

	[ `cat $ODD_IMAGE | md5sum | awk '{print $1}'` = $ODD_TEST_IMAGE_HASH ] && FLAG=1 || FLAG=0
}

interactive()
{
	ODD=$1
	NON_PASSED=1

	while ( [ $NON_PASSED -eq 1 ] ); do
		eject $ODD
		echo -n "Drive $[ $TESTED_QUANTITY + 1]:Either press Y and insert media for testing, or N if you want to finish test: "
		read foobar

		if [ "$foobar" == N ]; then
			test_failed
			break
		fi

		FLAG=0
		test_odd $ODD

		if [ $FLAG -eq 1 ]; then
			echo "Drive test passed"
			TESTED_QUANTITY=$[ $TESTED_QUANTITY + 1 ]
			test_progress $TESTED_QUANTITY $ODD_QUANTITY
			NON_PASSED=0

			generate_speed_results
		else
			echo "Drive test failed!"
		fi
	done
}

remove_test_image()
{
	rm -f $ODD_IMAGE
}

generate_speed_results()
{
	RESULTS=`perl -e '@l=map{split}<>;print join ",",@l' $RESULT_FILE`

	#here will be call to publish this monitoring results
}

detect_odd_quantity
[ $ODD_QUANTITY -eq 0 ] && return
TESTED_QUANTITY=0
test_started $ODD_QUANTITY

for i in `hal-find-by-capability --capability storage.cdrom`; do
	interactive `hal-device $i | grep access_control.file | awk '{print $3}' | sed "s/'//g"`
done

remove_test_image
test_succeeded
