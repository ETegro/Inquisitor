#!/bin/sh -e
# NAME=USB Flash Drive
# DESCRIPTION=USB Flash Drive working ability test with speed measurement
# DESTROYS_HDD=true
# IS_INTERACTIVE=true
# POWEROFF_DURING_TEST=false
# VERSION=0.1
# TAGS=benchmark,usb,usb-storage
# VAR=SIZE:int:20:Size of test file to be written, MiB
# VAR=BLOCKSIZE:int:1024:Blocksize used for reading and writing by dd, KiB
# VAR=COUNT:int:2:There should be this many devices

. /usr/share/inquisitor/functions-test

MOUNTPOINT=`mktemp -d`
TESTFILE=`mktemp`

# Cleanup
exit_handler()
{
	local rc=$?
	trap - EXIT

	if [ -f "$TESTFILE" ]; then
		rm $TESTFILE
	fi
	if [ -d "$MOUNTPOINT" ]; then
		cd /
		umount -f $MOUNTPOINT >/dev/null 2>&1 || true
		rm -rf $MOUNTPOINT
	fi
	exit $rc
}
trap exit_handler HUP PIPE INT QUIT TERM EXIT

# Check for ready for testing drives
STORAGE_QUANTITY=0
for UDI in `hal-find-by-property --key storage.bus --string usb`; do
	hal-get-property --udi "$UDI" --key storage.drive_type | grep -q "^disk$" || continue
	STORAGE_QUANTITY=$(( $STORAGE_QUANTITY + 1 ))
done
if [ "$STORAGE_QUANTITY" -ne "$COUNT" ]; then
	STORAGE_QUANTITY=0
	# Wait user for inserting needed flash drives
	print_green_message "Insert $COUNT USB Flash drives and press enter"
	read foobar #dummy variable

	for UDI in `hal-find-by-property --key storage.bus --string usb`; do
		hal-get-property --udi "$UDI" --key storage.drive_type | grep -q "^disk$" || continue

		vendor=`hal-get-property --udi "$UDI" --key storage.vendor`
		product=`hal-get-property --udi "$UDI" --key info.product`
		STORAGE_QUANTITY=$(( $STORAGE_QUANTITY + 1 ))
		print_green_message "Vendor: $vendor Product: $product"
	done
	print_green_message "Total USB drives quantity: $STORAGE_QUANTITY"
fi

# Check if there are right number of devices
if [ "$STORAGE_QUANTITY" -lt "$COUNT" ]; then
	print_red_message "Found $STORAGE_QUANTITY drives insted of $COUNT"
	test_failed "$STORAGE_QUANTITY drives insted of $COUNT"
else
for UDI in `hal-find-by-property --key storage.bus --string usb`; do
	hal-get-property --udi "$UDI" --key storage.drive_type | grep -q "^disk$" || continue
	block_dev=`hal-get-property --udi "$UDI" --key block.device`
	echo -n "Drive $block_dev..."
	
	dd if=/dev/urandom of=$TESTFILE bs=1024k count=$SIZE >/dev/null 2>&1

	# Create filesystem and write testfile
	mke2fs -m0 -F $block_dev >/dev/null 2>&1 || test_failed "Drive $block_dev writing error"
	mount -t ext2 $block_dev $MOUNTPOINT

	echo -n "writing..."
	write_time=`dd if=$TESTFILE of=${MOUNTPOINT}/testfile bs=${BLOCKSIZE}k 2>&1 | sed -n '$p' | awk '{print $6}'` \
		|| test_failed "Drive $block_dev writing error"
	umount -f $MOUNTPOINT

	# Clear all caches
	sync;sync;sync
	echo 3 > /proc/sys/vm/drop_caches

	# Remount for reading
	mount -t ext2 $block_dev $MOUNTPOINT

	echo -n "reading..."
	read_time=`dd if=$MOUNTPOINT/testfile of=/dev/null bs=${BLOCKSIZE}k 2>&1 | sed -n '$p' | awk '{print $6}'` \
		|| test_failed "Drive $block_dev reading error"

	echo -n "comparing..."
	cmp -s $TESTFILE $MOUNTPOINT/testfile || test_failed "Drive $block_dev comparing error"
	umount -f $MOUNTPOINT

	echo_success
	benchmark_submit_float "Drive $block_dev writing speed" $write_time
	benchmark_submit_float "Drive $block_dev reading speed" $read_time
done
fi
