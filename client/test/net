#!/bin/sh -ef
# NAME=Network interface
# DESCRIPTION=Network interfaces testing
# DESTROYS_HDD=false
# IS_INTERACTIVE=false
# POWEROFF_DURING_TEST=false
# VERSION=0.1
# TAGS=net
# VAR=TIMEOUT:int:15:Wait timeout while test file retrieving
# VAR=URL:string:3000/test_file:Relative to server PORT:URL to be fetched and checked
# VAR=MD5:string:805414334eb1d3ff4fdca507ec82098f:MD5 checksum for checking

. /usr/share/inquisitor/functions-test

# Cleanup
exit_handler()
{
	local rc=$?
	trap - EXIT

	ifconfig eth${FIRST_NIC} up
	ip route replace default via $SERVER dev eth${FIRST_NIC}
	sleep 5

	for i in `seq 0 $(( $NIC_QUANTITY - 1 ))`; do
		if [ $i -ne "$FIRST_NIC" ]; then
			ip link set eth${i} down
		fi
	done

	exit $rc
}
trap exit_handler HUP PIPE INT QUIT TERM EXIT

test_nic()
{
	local nic_number=$1
	local md5

	ifconfig eth${nic_number} up
	ip route replace default via $SERVER dev eth${nic_number}
	sleep 5

	for i in `seq 0 $(( $NIC_QUANTITY - 1 ))`; do
		if [ "$nic_number" -ne $i ]; then
			ip link set eth${i} down
		fi
	done

	[ `curl --connect-timeout $TIMEOUT http://${SERVER}:${URL} | md5sum -b | awk '{print $1}'` = $MD5 ] || test_failed "NIC eth${i} test failed"
}

NIC_QUANTITY=`cat /proc/net/dev | grep eth | wc -l`
[ "$NIC_QUANTITY" -eq 0 ] && return
FIRST_NIC=`ip route | grep default | awk '{print $NF}' | sed 's/eth//'`

for i in `seq 0 $(( $NIC_QUANTITY - 1 ))`; do
if [ "$FIRST_NIC" -ne $i ]; then
	echo "Testing NIC eth{$i}..."
	test_nic $i
fi
done

test_nic $FIRST_NIC #to restore startup parameters
