#!/bin/sh -e
# NAME=Firmware reflashing
# DESCRIPTION=This test is a part of rather complex Inquisitor's firmware reflashing system. This part do following things: 1) Gets a list of components related only to this computer and needed to be reflashed. There are corresponding firmware/flash version and reflashing image also; 2) Test parses each entity and, depending of component, tries to retrieve it's version (BMC's or BIOS'es version, for example); 3) Compares it with retrieved from server needed value and if they are do not differ - proceed with need component; else - there are two ways: either to reflash it under current GNU/Linux session (to reflash disk controllers with einarc for example), or to ask server to create network bootable file with needed reflasher image; then reboot. After reboot computer will boot up reflasher image (as a rule it is some kind of DOS with batch files and flashers). Server will delete it after boot, to allow Inquisitor booting again. Firmware test will test all of components again and again in cycle until everything's versions will be equal to needed ones, and only then, test will succeed. Sometimes some component's version can not be detected and human must manually somehow check it and allow test to continue.
# DESTROYS_HDD=false
# IS_INTERACTIVE=true
# POWEROFF_DURING_TEST=true
# VERSION=0.1
# TAGS=bios,firmware
# DEPENDS=Mainboard,Disk Controller,BMC
# VAR=FORCE_FIRMWARES_LIST:string::Forced firmwares list over that sended by server. Newlines replaced by twice doubledots

. _inq-config-global; . $SHARE_DIR/functions-test

exit_handler()
{
	[ -r "$FIRMWARES" ] && rm $FIRMWARES
}

FIRMWARES=`mktemp`

get_needed_firmwares_list > $FIRMWARES || test_failed "Unable to get needed firmwares list"
if cat $FIRMWARES | grep -q "FOO"; then
	prepare_and_boot_from_image "foobar" || test_failed "Unable to boot from image"
else
	test_succeeded "No firmwares needed to be updated" || true
fi
